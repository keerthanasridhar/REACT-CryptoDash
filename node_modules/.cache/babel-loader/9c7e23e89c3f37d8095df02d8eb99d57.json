{"ast":null,"code":"import _objectSpread from \"/Users/keerthana/Desktop/gitproj/cryptodash/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/keerthana/Desktop/gitproj/cryptodash/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/keerthana/Desktop/gitproj/cryptodash/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/keerthana/Desktop/gitproj/cryptodash/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/keerthana/Desktop/gitproj/cryptodash/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/keerthana/Desktop/gitproj/cryptodash/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/keerthana/Desktop/gitproj/cryptodash/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/keerthana/Desktop/gitproj/cryptodash/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/keerthana/Desktop/gitproj/cryptodash/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/keerthana/Desktop/gitproj/cryptodash/src/App/AppProvider.js\";\nimport React from 'react';\nimport _ from 'lodash';\n\nvar cc = require('cryptocompare');\n\nimport moment from 'moment';\nvar MAX_FAVORTITES = 10;\nvar TIME_UNITS = 10;\nexport var Appcontext = React.createContext();\nexport var AppProvider =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppProvider, _React$Component);\n\n  function AppProvider(props) {\n    var _this;\n\n    _classCallCheck(this, AppProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppProvider).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.fetchCoins();\n\n      _this.fetchPrices();\n\n      _this.fetchHistoric();\n\n      console.log('Component does mount');\n    };\n\n    _this.componentDidUpdate = function () {\n      console.log('Yes, looks like the component did update!!');\n    };\n\n    _this.componentDidCatch = function () {\n      console.log('There you go! I caught it!');\n    };\n\n    _this.addCoin = function (key) {\n      var favorites = _toConsumableArray(_this.state.favorites);\n\n      if (favorites.length <= MAX_FAVORTITES) {\n        favorites.push(key);\n\n        _this.setState({\n          favorites: favorites\n        });\n      }\n    };\n\n    _this.removeCoin = function (key) {\n      var favorites = _toConsumableArray(_this.state.favorites);\n\n      _this.setState({\n        favorites: _.pull(favorites, key)\n      });\n    };\n\n    _this.isInFavorites = function (key) {\n      return _.includes(_this.state.favorites, key);\n    };\n\n    _this.fetchCoins =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var coinList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return cc.coinList();\n\n            case 2:\n              coinList = _context.sent.Data;\n\n              _this.setState({\n                coinList: coinList\n              });\n\n              console.log(coinList);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.fetchPrices =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var prices;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!_this.state.firstVisit) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 2:\n              _context2.next = 4;\n              return _this.prices();\n\n            case 4:\n              prices = _context2.sent;\n              console.log(prices);\n\n              _this.setState({\n                prices: prices\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.fetchHistoric =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var results;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!_this.state.firstVisit) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 2:\n              _context3.next = 4;\n              return _this.historical();\n\n            case 4:\n              results = _context3.sent;\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n    _this.prices =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var returnData, i, pricesData;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              returnData = [];\n              i = 0;\n\n            case 2:\n              if (!(i < _this.state.favorites.length)) {\n                _context4.next = 16;\n                break;\n              }\n\n              _context4.prev = 3;\n              _context4.next = 6;\n              return cc.priceFull(_this.state.favorites[i], 'USD');\n\n            case 6:\n              pricesData = _context4.sent;\n              returnData.push(pricesData);\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](3);\n              console.warn('Fetch price error:', _context4.t0);\n\n            case 13:\n              i++;\n              _context4.next = 2;\n              break;\n\n            case 16:\n              return _context4.abrupt(\"return\", returnData);\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this, [[3, 10]]);\n    }));\n\n    _this.historical = function () {\n      var promises = [];\n\n      for (var units = TIME_UNITS; units > 0; units--) {\n        promises.push(cc.priceHistorical(_this.state.currentFavourites, ['USD'], moment().subtract({\n          months: units\n        }).toDate()));\n      }\n\n      return promises.all(promises);\n    };\n\n    _this.confirmFavorites = function () {\n      var currentFavourites = _this.state.favorites[0];\n      console.log(\"Settings an item\");\n\n      _this.setState({\n        firstVisit: false,\n        page: 'dashboard',\n        currentFavourites: currentFavourites\n      }, function () {\n        _this.fetchPrices();\n      });\n\n      console.log('is it happening');\n      localStorage.setItem('cryptoDash', JSON.stringify({\n        favorites: _this.state.favorites,\n        currentFavourites: currentFavourites\n      }));\n    };\n\n    _this.setCurrentFavorite = function (sym) {\n      _this.setState({\n        currentFavourites: sym\n      });\n\n      localStorage.setItem('cryptoDash', JSON.stringify(_objectSpread({}, JSON.parse(localStorage.getItem('cryptoDash')), {\n        currentFavourites: sym\n      })));\n    };\n\n    _this.setFilteredCoins = function (filteredCoins) {\n      return _this.setState({\n        filteredCoins: filteredCoins\n      });\n    };\n\n    _this.setPage = function (page) {\n      console.log(\"setting page\" + page);\n\n      _this.setState({\n        page: page\n      });\n    };\n\n    _this.state = _objectSpread({\n      page: 'settings',\n      favorites: []\n    }, _this.savedSetting(), {\n      setPage: _this.setPage,\n      addCoin: _this.addCoin,\n      removeCoin: _this.removeCoin,\n      isInFavorites: _this.isInFavorites,\n      filteredCoins: _this.filteredCoins,\n      confirmFavorites: _this.confirmFavorites,\n      setFilteredCoins: _this.setFilteredCoins,\n      setCurrentFavorite: _this.setCurrentFavorite\n    });\n    return _this;\n  }\n\n  _createClass(AppProvider, [{\n    key: \"savedSetting\",\n    value: function savedSetting() {\n      var cryptoDashData = JSON.parse(localStorage.getItem('cryptoDash'));\n\n      if (!cryptoDashData) {\n        return {\n          firstVisit: true,\n          page: 'settings',\n          currentFavourites: currentFavourites\n        };\n      }\n\n      var favorites = cryptoDashData.favorites,\n          currentFavourites = cryptoDashData.currentFavourites;\n      console.log('Saved current FAv?');\n      return {\n        favorites: favorites,\n        currentFavourites: currentFavourites\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Appcontext.Provider, {\n        value: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return AppProvider;\n}(React.Component);","map":{"version":3,"sources":["/Users/keerthana/Desktop/gitproj/cryptodash/src/App/AppProvider.js"],"names":["React","_","cc","require","moment","MAX_FAVORTITES","TIME_UNITS","Appcontext","createContext","AppProvider","props","componentDidMount","fetchCoins","fetchPrices","fetchHistoric","console","log","componentDidUpdate","componentDidCatch","addCoin","key","favorites","state","length","push","setState","removeCoin","pull","isInFavorites","includes","coinList","Data","firstVisit","prices","historical","results","returnData","i","priceFull","pricesData","warn","promises","units","priceHistorical","currentFavourites","subtract","months","toDate","all","confirmFavorites","page","localStorage","setItem","JSON","stringify","setCurrentFavorite","sym","parse","getItem","setFilteredCoins","filteredCoins","setPage","savedSetting","cryptoDashData","children","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nconst cc = require('cryptocompare');\nimport moment from 'moment';\n\nconst MAX_FAVORTITES = 10;\nconst TIME_UNITS = 10;\nexport const Appcontext = React.createContext();\n\nexport class AppProvider extends React.Component {\n    constructor(props){   \n        super(props);\n        this.state = {\n            page: 'settings',\n            favorites:[],\n            ...this.savedSetting(),\n            setPage: this.setPage,\n            addCoin: this.addCoin,\n            removeCoin: this.removeCoin,\n            isInFavorites: this.isInFavorites,\n            filteredCoins: this.filteredCoins,\n            confirmFavorites:this.confirmFavorites,\n            setFilteredCoins: this.setFilteredCoins,\n            setCurrentFavorite: this.setCurrentFavorite\n        }\n    }\n\n    componentDidMount = ()=>{\n        this.fetchCoins();\n        this.fetchPrices();\n        this.fetchHistoric();\n        console.log('Component does mount');\n    }\n    \n    componentDidUpdate = ()=>{\n        console.log('Yes, looks like the component did update!!')\n    }\n\n    componentDidCatch = ()=>{\n        console.log('There you go! I caught it!');\n    }\n\n\n    addCoin = key =>{\n        let favorites = [...this.state.favorites]\n        if(favorites.length <= MAX_FAVORTITES){\n            favorites.push(key);\n            this.setState({favorites})\n        }\n    }\n    removeCoin = key =>{\n        let favorites = [...this.state.favorites];\n        this.setState({favorites: _.pull(favorites,key)})\n    }\n\n    isInFavorites = key => _.includes(this.state.favorites,key)\n    \n    fetchCoins = async ()=>{\n        let coinList = (await cc.coinList()).Data;\n        this.setState({coinList})\n        console.log(coinList);\n    }\n\n    fetchPrices = async  ()=>{\n        if(this.state.firstVisit) return;\n        let prices = await this.prices();\n        console.log(prices);\n        this.setState({prices})\n    }\n    fetchHistoric = async ()=>{\n        if(this.state.firstVisit) return;\n        let results = await this.historical()\n    }\n    prices = async ()=>{\n        let returnData = [];\n        for(let i=0;i<this.state.favorites.length;i++){\n            try{\n                let pricesData = await cc.priceFull(this.state.favorites[i],'USD')\n                returnData.push(pricesData)\n            } catch(e){\n                console.warn('Fetch price error:',e)\n            }\n        }\n        return returnData;\n    } \n\n    historical = () =>{\n        let promises = [];\n        for(let units = TIME_UNITS;units > 0;units--){\n            promises.push(\n                cc.priceHistorical(\n                    this.state.currentFavourites,\n                    ['USD'],\n                    moment()\n                    .subtract({ months:units })\n                    .toDate()\n                )\n            )\n        }\n        return promises.all(promises)\n;    }\n\n    confirmFavorites=()=>{\n        let currentFavourites = this.state.favorites[0];\n        console.log(\"Settings an item\")\n        this.setState({\n            firstVisit: false,\n            page: 'dashboard',\n            currentFavourites,\n        },()=>{\n            this.fetchPrices()\n        })\n        console.log('is it happening')\n        localStorage.setItem('cryptoDash',JSON.stringify({\n            favorites: this.state.favorites,\n            currentFavourites   \n        }))\n    }\n\n    setCurrentFavorite = (sym)=>{\n        this.setState({\n            currentFavourites: sym\n        })\n        localStorage.setItem('cryptoDash',JSON.stringify({\n            ...JSON.parse(localStorage.getItem('cryptoDash')),\n            currentFavourites:sym\n        }))\n    }\n\n    savedSetting(){\n       \n        let cryptoDashData = JSON.parse(localStorage.getItem('cryptoDash'));\n        if(!cryptoDashData){ \n            return { firstVisit: true,\n                page: 'settings',\n                currentFavourites\n            }    \n        } \n       \n        let {favorites,currentFavourites}  = cryptoDashData;\n        console.log('Saved current FAv?')\n            return {favorites,currentFavourites}\n    }\n\n    setFilteredCoins = (filteredCoins) => this.setState({filteredCoins})\n\n    setPage = page => {\n        console.log(\"setting page\" + page)   \n        this.setState({page})\n\n    }\n    \n    render() {\n        return (\n            <Appcontext.Provider value={this.state}>\n            {this.props.children}\n            </Appcontext.Provider>  \n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}